;
;Options configured in a .conf file will be overridden by command line arguments
; but replace the application defaults.
; Copy this file to create a custom '.conf' file and provide the path to this file with the -c (--conf) argument.
; Uncomment and specify any settings you wish to include

[Pathing for input/output]
# image = "./sample_images"  # Input image file or directory
# sample_id = "./sample_images/id.csv"  # Input csv file with sample identities as columns (block, unit, group)"
# out_dir = "./sample_images"  # Output directory
# area_file = "area.csv"  # area file name (will be placed/retrieved from within out_dir)

[Image filename parsing]
time_regex = ".*(?P<year>[0-9]{4})-(?P<month>0[1-9]|1[0-2])-(?P<day>0[1-9]|[12][0-9]|3[01])_(?P<hour>[01][0-9]|2[0-4])h(?P<minute>[0-5][0-9])m.*"  # year, month, day, hour, minute
time_format = "%Y-%m-%d_%Hh%Mm"
block_regex = ".*pi([0-9]).*"

[Debug options]
# debug = "save"  # "plot" loads matplotlib figures and "print" saves png files, "both" is also valid.
loglevel = "INFO"  # "INFO" just prints the processed files and any tuned parameters, "DEBUG" is quite verbose, leave undefined for quiet
overlay = True  # Force printing of the outline of the selected area over the original image, useful for quality control
animations = True  # Prints out a 3d animation of the hull from calibration (only if debug is save or both)

[Multithreading option]
# processes = 1

[Alpha hull and distance parameters (should be defined by calibration)]
# circle_colour = "25.0,47.0,-73.6"  # Circle colour in Lab colourspace
# target_colours = ["49.4,3.7,55.2", "52.2,1.7,57.4", "53.1,7.8,58.2"]  # Target colour points in Lab colourspace as comma separated floats, at least 4 points are required
# alpha = 0  # Alpha value used to create concave hull around points, 0 to use the convex hull
# delta = 10  # Maximum distance outside of target alpha shape to consider as target

[scale]  # todo develop an interface to define this during calibration
# scale = 5.625  # pixels/unit distance for area calculation (if unit distance is mm then area will be reported in mmÂ²

[Image segmentation (used for calibration of target colours)]
# num_superpixels = 1000
# superpixel_compactness = 10
# sigma = 1
# num_calibration = 3 # the number of images to load for calibration

[Image fill parameters used during mask creation for area calculation]
# remove = 100  # remove objects less than this size (px)
# fill = 100  # fill holes less than this size (px)

[Analysis parameters]
# fit_start = 0  # What day to start RGR fit
# fit_end = 7  # What day to end RGR fit, default is the end of the captured data.

[layout parameters]  # todo many of these should either be defined interactively or handled differently
# circle_diameter = 180  # Diameter of surrounding circles in pixels
# circle_expansion = 1  # Optional expansion factor for circles (increases radius to search, circles must not overlap)
# plate_circle_separation = 50  # Distance between edges of circles within a plate (px)
# plate_width = 500  # Length of shortest edge of plate (px)

# circles_per_plate = 6  # In plate clustering, the number of circles per plate
# n_plates = 8  # In plate layout, the number of plates per image
# circles_cols_first = True  # In circle ID layout, increment by columns first (default is rows first)
# circles_right_left = True  # In circle ID layout, increment right to left (default is left to right)
# circles_bottom_top = True  # In circle ID layout, increment from bottom to top (default is top to bottom)
# plates_cols_first = True  # In plate ID layout, increment by columns first (default is rows first)
# plates_right_left = True  # In plate ID layout, increment from right to left (default is left to right)
# plates_bottom_top = True  # In plate ID layout, increment from bottom to top (default is top to bottom)
